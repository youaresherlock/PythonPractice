hash散列表

解决冲突的方法:
    给定初始容量,当装载因子大于0.75时,进行扩容两倍,然后重新哈希
1. 开放定址法(再哈希法)
    线性探测在散列、二次探测再散列、伪随机探测再散列
2. 再哈希
    同时构造多个不同的哈希函数, Hi = RH1(key) i = 1, 2, ..., k
    当哈希地址Hi = RH1(key)发生冲突时,再计算Hi=RH2(key)......,
    直到冲突不再发生.这种方法不易产生聚集,但增加了计算时间

3. 链地址法
    这种方法的基本思想是将所有哈希地址为i的元素构成一个称为同义词链的单链表，
    并将单链表的头指针存在哈希表的第i个单元中，因而查找、插入和删除主要在同义词链中进行。链地址法适用于经常进行插入和删除的情况。

Java中HashMap原理就是初始容量是16, 数组+链表或红黑树构成
JDK1.8链表长度大于8时引入了红黑树
缺点: 存不了大数据,线程不安全(put)
















