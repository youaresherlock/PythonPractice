内存泄漏:
    程序未能释放已不再使用的内存

Python垃圾回收机制: 引用计数为主,标记清除(mark-sweep)和分代回收为辅(generational)
当这个对象的引用计数（指针数）为 0 的时候，说明这个对象永不可达，
自然它也就成为了垃圾，需要被回收
循环引用:
如果有两个对象，它们互相引用，并且不再被别的对象所引用
标记清除算法:
    对于一个有向图,如果从一个节点出发进行遍历,并标记其经过的所有节点;那么,在遍历结束后,
所有没有被标记的节点,我们就是称之为不可达节点.每次都遍历全图,对于Python而言是一种巨大的
性能浪费.所以,在Python的垃圾回收实现中,mark_sweep使用双向链表维护了一个数据结构，并且只
考虑容器类的对象(只有容器类对才有可能产生循环引用)
分代回收:
    新生的对象更有可能被垃圾回收,而存活更久的对象也有更高的概率继续存活.

























